{"version":3,"sources":["components/Fullpage.js","components/Down.js","components/Navigation.js","Sections/TitlesAndIcons.js","Sections/AboutSection.js","components/SkillCard.js","Sections/SkillSection.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","react_default","a","createElement","className","concat","style","backgroundColor","Component","Down","src","icon","alt","Navigation","onClick","changeColorHandler","magicIcon","modules","activeClass","to","spy","smooth","offset","duration","onSetActive","handleSetActive","color","name","TitlesAndIcons","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","iconDown","data","icons","down","magicwand","background","backgroundImg","backFirst","isVisible","changeColor","bind","assertThisInitialized","setState","yellowDown","yellowMagic","snow","lib_default","src_components_Navigation","src_components_Fullpage","title","subtitle","keys","links","map","key","react_social_icons","url","src_components_Down","AboutSection","sections","items","p","content","SkillCard","skill","image","SkillSection","eachSkill","src_components_SkillCard","App","Sections_TitlesAndIcons","src_Sections_AboutSection","src_Sections_SkillSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68138df9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Fullpage.css';\r\n\r\nclass Fullpage extends Component {\r\n    render() {\r\n        const { children } = this.props;\r\n        return (\r\n            <div className={`fullpage ${this.props.className || ''}`} style={{ backgroundColor: this.props.backgroundColor }}>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Fullpage;","import React from 'react';\r\nimport './Down.css';\r\n\r\n\r\nconst Down = (props) => {\r\n    return (\r\n        <div className=\"scroll-to-next\">\r\n            <div className=\"arrow bounce\" >\r\n                <div className=\"scroll-text\" style={props.style}>Click Me</div>\r\n                <img src={props.icon} alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Down\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link, Element } from 'react-scroll'\r\n\r\nimport './Navigation.css'\r\n\r\n\r\nclass Navigation extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"navigation\">\r\n                <nav className=\"stiky\" style={{\r\n                    backgroundColor: \"rgba(250, 250, 250, 0)\"\r\n                }}>\r\n                    <div className=\"magic-wand magic-bounce\" onClick={this.props.changeColorHandler} >\r\n                        <img className=\"\" src={this.props.magicIcon} alt=\"MagicWand\" ></img>\r\n                        <div className=\"magic-text\">Color Me</div>\r\n                    </div>\r\n                    <div className=\"menu\">\r\n                        <Link activeClass=\"active\"\r\n                            to=\"about\"\r\n                            spy={true}\r\n                            smooth={true}\r\n                            offset={0}\r\n                            duration={500}\r\n                            onSetActive={this.handleSetActive}>\r\n\r\n                            <div className=\"menu__item active\" style={{ color: this.props.color }}>About</div>\r\n                        </Link>\r\n                        <Element name=\"about\" className=\"element\"></Element>\r\n                        <Link activeClass=\"active\"\r\n                            to=\"skill\"\r\n                            spy={true}\r\n                            smooth={true}\r\n                            offset={1260}\r\n                            duration={500}\r\n                            onSetActive={this.handleSetActive}>\r\n\r\n                            <div className=\"menu__item\" style={{ color: this.props.color }}>Skill</div>\r\n                        </Link>\r\n                        <Element name=\"skill\" className=\"element\"></Element>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React, { Component } from 'react';\r\nimport { Link, Element } from 'react-scroll'\r\n\r\nimport data from '../data.json';\r\nimport Fullpage from '../components/Fullpage';\r\nimport { SocialIcon } from 'react-social-icons';\r\nimport Down from '../components/Down';\r\n\r\nimport './TitleAndIcons.css';\r\nimport Navigation from '../components/Navigation.js';\r\nimport SnowStorm from 'react-snowstorm';\r\n\r\nclass TitlesAndIcons extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            color: \"white\",\r\n            iconDown: data.icons.down,\r\n            magicIcon: data.icons.magicwand,\r\n            background: data.backgroundImg.backFirst,\r\n            backgroundColor: \"darkslategrey\",\r\n            isVisible: false\r\n        }\r\n        this.changeColor = this.changeColor.bind(this);\r\n    }\r\n    changeColor() {\r\n        this.setState({\r\n            color: this.state.color === \"white\" ? \"yellow\" : \"white\",\r\n            iconDown: this.state.iconDown === data.icons.yellowDown ? data.icons.down : data.icons.yellowDown,\r\n            magicIcon: this.state.magicIcon === data.icons.magicwand ? data.icons.yellowMagic : data.icons.magicwand,\r\n            isVisible: this.state.isVisible === false ? true : false,\r\n            backgroundColor: this.state.backgroundColor === \"darkslategrey\" ? \"#3498db\" : \"darkslategrey\",\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let props = {\r\n            color: this.state.color,\r\n            magicIcon: this.state.magicIcon,\r\n            changeColorHandler: this.changeColor\r\n        }\r\n\r\n        let snow;\r\n        if (this.state.isVisible) {\r\n            snow = <div><SnowStorm /></div>\r\n        }\r\n        return ([\r\n            <div>\r\n                <Navigation {...props} />\r\n            </div>,\r\n            <div>\r\n                <Fullpage className=\"first\" backgroundColor={this.state.backgroundColor}>\r\n                    <h1 className=\"title\" style={{ color: this.state.color }}>{data.title} </h1>\r\n                    <div>\r\n                        <h2 style={{ color: this.state.color }}>{data.subtitle}</h2>\r\n                    </div>\r\n                    <div className=\"icons-wrapper\">\r\n                        {\r\n                            Object.keys(data.links).map(key => {\r\n                                return (\r\n                                    <div className=\"icons\" key={data.links[key]}>\r\n                                        <SocialIcon url={data.links[key]} />\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                    </div>\r\n\r\n                    {snow}\r\n\r\n                </Fullpage>\r\n                <Link activeClass=\"active\"\r\n                    to=\"about\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={0}\r\n                    duration={500}\r\n                    onSetActive={this.handleSetActive}>\r\n                    <Down style={{ color: this.state.color }}\r\n                        icon={this.state.iconDown}\r\n                    />\r\n                </Link>\r\n                <Element name=\"about\" className=\"element\"></Element>\r\n            </div>\r\n\r\n        ]\r\n        );\r\n    }\r\n}\r\nexport default TitlesAndIcons;","import React, { Component } from 'react';\r\n\r\nimport data from '../data.json';\r\nimport Fullpage from '../components/Fullpage';\r\n\r\nimport './AboutSection.css';\r\n\r\nclass AboutSection extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <Fullpage className=\"secound\">\r\n                <h3>{data.sections[0].title}</h3>\r\n                <div className=\"paragraph\">\r\n                    {data.sections[0].items.map(p => {\r\n                        return <p key={data.sections}>{p.content}</p>\r\n                    })}\r\n                </div>\r\n            </Fullpage>\r\n        )\r\n    }\r\n}\r\nexport default AboutSection;","import React, { Component } from 'react';\r\nimport './SkillCard.css';\r\n\r\nclass SkillCard extends Component {\r\n    render() {\r\n        const { skill } = this.props;\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"image-wrapper\">\r\n                    <img src={skill.content.image} alt={skill.content.title}></img>\r\n                </div>\r\n                <div className=\"skill-title-wrapper\">\r\n                    <h4 >{skill.content.title}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SkillCard;","import React, { Component } from 'react';\r\n\r\nimport data from '../data.json';\r\nimport Fullpage from '../components/Fullpage';\r\nimport SkillCard from '../components/SkillCard';\r\n\r\nimport './SkillSection.css';\r\n\r\n\r\nclass SkillSection extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <Fullpage className=\"third\">\r\n                <h3>{data.sections[1].title}</h3>\r\n                <div className=\"cards-wrapper\">\r\n                    {data.sections[1].items.map(eachSkill => {\r\n                        return (\r\n                            <SkillCard skill={eachSkill} ></SkillCard>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Fullpage>\r\n        )\r\n    }\r\n}\r\nexport default SkillSection;","import React, { Component } from 'react';\n\nimport TitleAndIcons from './Sections/TitlesAndIcons';\nimport AboutSection from './Sections/AboutSection';\nimport SkillSection from './Sections/SkillSection';\n\n\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        \n        <TitleAndIcons  />\n        <AboutSection />\n        <SkillSection />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}