{"version":3,"sources":["components/Fullpage.js","components/Down.js","components/Navigation.js","Sections/TitlesAndIcons.js","Sections/AboutSection.js","components/SkillCard.js","Sections/SkillSection.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","react_default","a","createElement","className","concat","Component","Down","src","icon","alt","Navigation","style","backgroundColor","data","icons","magicwand","onClick","changeColorHandler","modules","activeClass","to","spy","smooth","offset","duration","onSetActive","handleSetActive","name","TitlesAndIcons","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","color","changeColor","bind","assertThisInitialized","setState","src_components_Navigation","src_components_Fullpage","title","subtitle","keys","links","map","key","react_social_icons","url","src_components_Down","down","AboutSection","sections","items","p","content","SkillCard","skill","image","SkillSection","eachSkill","src_components_SkillCard","App","Sections_TitlesAndIcons","src_Sections_AboutSection","src_Sections_SkillSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f856e853.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Fullpage.css';\r\n\r\nclass Fullpage extends Component {\r\n    render() {\r\n        const { children } = this.props;\r\n        return (\r\n            <div className={`fullpage ${this.props.className || ''}`}>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Fullpage;","import React from 'react';\r\nimport './Down.css';\r\n\r\n\r\nconst Down = (props) => {\r\n    return (\r\n        <div className=\"scroll-to-next\">\r\n            <div className=\"arrow bounce\" >\r\n                <div className=\"scroll-text\">Click Me</div>\r\n                <img src={props.icon} alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Down\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link, Element } from 'react-scroll'\r\n\r\nimport data from '../data.json'\r\nimport './Navigation.css'\r\n\r\n\r\nclass Navigation extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"navigation\">\r\n                <nav className=\"stiky\" style={{\r\n                    backgroundColor: \"rgba(250, 250, 250, 0)\"\r\n                }}>\r\n                    <div className=\"magic-wand magic-bounce\">\r\n                        <img className=\"\" src={data.icons.magicwand} alt=\"MagicWand\" onClick={this.props.changeColorHandler} ></img>\r\n                        <div className=\"magic-text\">Color Me</div>\r\n                    </div>\r\n                    <div className=\"menu\">\r\n                        <Link activeClass=\"active\"\r\n                            to=\"about\"\r\n                            spy={true}\r\n                            smooth={true}\r\n                            offset={0}\r\n                            duration={500}\r\n                            onSetActive={this.handleSetActive}>\r\n\r\n                            <div className=\"menu__item active\">About</div>\r\n                        </Link>\r\n                        <Element name=\"about\" className=\"element\"></Element>\r\n                        <Link activeClass=\"active\"\r\n                            to=\"skill\"\r\n                            spy={true}\r\n                            smooth={true}\r\n                            offset={1260}\r\n                            duration={500}\r\n                            onSetActive={this.handleSetActive}>\r\n\r\n                            <div className=\"menu__item\">Skill</div>\r\n                        </Link>\r\n                        <Element name=\"skill\" className=\"element\"></Element>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React, { Component } from 'react';\r\nimport { Link, Element } from 'react-scroll'\r\n\r\nimport data from '../data.json';\r\nimport Fullpage from '../components/Fullpage';\r\nimport { SocialIcon } from 'react-social-icons';\r\nimport Down from '../components/Down';\r\n\r\nimport './TitleAndIcons.css';\r\nimport Navigation from '../components/Navigation.js';\r\n\r\nclass TitlesAndIcons extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            color: \"white\"\r\n        }\r\n        this.changeColor = this.changeColor.bind(this);\r\n    }\r\n    changeColor() {\r\n        this.setState({\r\n            color:this.state.color === \"white\" ? \"yellow\":\"white\"\r\n            \r\n        })\r\n    }\r\n    render() {\r\n        return ([\r\n            <div>\r\n                <Navigation changeColorHandler={this.changeColor} />\r\n            </div>,\r\n            <div>\r\n                <Fullpage className=\"first\" >\r\n                    <h1 className=\"title\" style={{color:this.state.color}}>{data.title} </h1>\r\n                    <div>\r\n                        <h2 style={{color:this.state.color}}>{data.subtitle}</h2>\r\n                    </div>\r\n                    <div className=\"icons-wrapper\">\r\n                        {\r\n                            Object.keys(data.links).map(key => {\r\n                                return (\r\n                                    <div className=\"icons\" key={data.links[key]}>\r\n                                        <SocialIcon  url={data.links[key]} />\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                    </div>\r\n                </Fullpage>\r\n                <Link activeClass=\"active\"\r\n                    to=\"about\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={0}\r\n                    duration={500}\r\n                    onSetActive={this.handleSetActive}>\r\n                    <Down\r\n                        icon={data.icons.down}\r\n                    />\r\n                </Link>\r\n                <Element name=\"about\" className=\"element\"></Element>\r\n            </div>\r\n\r\n        ]\r\n        );\r\n    }\r\n}\r\nexport default TitlesAndIcons;","import React, { Component } from 'react';\r\n\r\nimport data from '../data.json';\r\nimport Fullpage from '../components/Fullpage';\r\n\r\nimport './AboutSection.css';\r\n\r\nclass AboutSection extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <Fullpage className=\"secound\">\r\n                <h3>{data.sections[0].title}</h3>\r\n                <div className=\"paragraph\">\r\n                    {data.sections[0].items.map(p => {\r\n                        return <p key={data.sections}>{p.content}</p>\r\n                    })}\r\n                </div>\r\n            </Fullpage>\r\n        )\r\n    }\r\n}\r\nexport default AboutSection;","import React, { Component } from 'react';\r\nimport './SkillCard.css';\r\n\r\nclass SkillCard extends Component {\r\n    render() {\r\n        const { skill } = this.props;\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"image-wrapper\">\r\n                    <img src={skill.content.image} alt={skill.content.title}></img>\r\n                </div>\r\n                <div className=\"skill-title-wrapper\">\r\n                    <h4 >{skill.content.title}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SkillCard;","import React, { Component } from 'react';\r\n\r\nimport data from '../data.json';\r\nimport Fullpage from '../components/Fullpage';\r\nimport SkillCard from '../components/SkillCard';\r\n\r\nimport './SkillSection.css';\r\n\r\n\r\nclass SkillSection extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <Fullpage className=\"third\">\r\n                <h3>{data.sections[1].title}</h3>\r\n                <div className=\"cards-wrapper\">\r\n                    {data.sections[1].items.map(eachSkill => {\r\n                        return (\r\n                            <SkillCard skill={eachSkill} ></SkillCard>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Fullpage>\r\n        )\r\n    }\r\n}\r\nexport default SkillSection;","import React, { Component } from 'react';\n\nimport TitleAndIcons from './Sections/TitlesAndIcons';\nimport AboutSection from './Sections/AboutSection';\nimport SkillSection from './Sections/SkillSection';\n\n\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        \n        <TitleAndIcons  />\n        <AboutSection />\n        <SkillSection />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}